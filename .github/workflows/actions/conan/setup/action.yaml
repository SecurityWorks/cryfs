name: 'Install conan package manager'
description: 'Install conan package manager'
inputs:
# Note: Many arguments are only supported on Linux/macOS, not on Windows
  compiler:
    description: "Which compiler to use for the build"
    required: true
  compiler_version:
    description: "Which compiler version to use for the build"
    required: true
  compiler_executable_cxx:
    description: "Which C++ compiler executable to use for the build"
    required: true
  compiler_executable_c:
    description: "Which C compiler to use for the build"
    required: true
  compiler_libcxx:
    description: "Which C++ standard library to use (e.g. libstdc++11, libc++)"
    required: true
  build_type:
    description: "Which cmake build type to use (e.g. Release, Debug, RelWithDebInfo)"
    required: true
  # TODO Make sure extra_cxxflags work
  extra_cxxflags:
    description: "Extra flags to add to the compiler"
    required: true
runs:
  using: "composite"
  steps:
    - name: Install conan
      uses: ./.github/workflows/actions/pipx/install
      with:
        packages: conan==2.7.0 --force
    # - name: Make sure conan cache directory exists
    #   shell: bash
    #   run: |
    #     set -e
    #     set -v
    #     echo "Creating CONAN_USER_HOME in $CONAN_USER_HOME"
    #     mkdir -p "$CONAN_USER_HOME"
    #     if [ "$CONAN_USER_HOME_SHORT" != "" ]; then
    #       echo "Creating CONAN_USER_HOME_SHORT in $CONAN_USER_HOME_SHORT"
    #       mkdir -p "$CONAN_USER_HOME_SHORT"
    #     fi
    - name: Configure conan profile
      uses: ./.github/workflows/actions/conan/configure_profile
      with:
        compiler: ${{ inputs.compiler }}
        compiler_version: ${{ inputs.compiler_version }}
        compiler_libcxx: ${{ inputs.compiler_libcxx }}
        compiler_executable_c: ${{ inputs.compiler_executable_c }}
        compiler_executable_cxx: ${{ inputs.compiler_executable_cxx }}
        build_type: ${{ inputs.build_type }}
        extra_cxxflags: ${{ inputs.extra_cxxflags }}
